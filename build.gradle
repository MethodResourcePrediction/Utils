buildscript {
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3'
    }
}

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'maven'
    id 'signing'
}

apply plugin: 'com.bmuschko.nexus'

repositories {
    jcenter()
    maven() {
        url = 'https://srv202.parsens.uni-kassel.de/repository/maven-snapshots/'
    }
}

group = "de.uniks.vs.methodresourceprediction"
archivesBaseName = "utils"
version = "1.0.0-SNAPSHOT"

dependencies {
    compile group: 'de.uniks.vs.methodresourceprediction', name: 'annotations', version: '1.0.0-SNAPSHOT'

    compile group: 'com.ibm.wala', name: 'core', version: '1.5.7-SNAPSHOT'
    compile group: 'com.ibm.wala', name: 'util', version: '1.5.7-SNAPSHOT'
    compile group: 'com.ibm.wala', name: 'shrike', version: '1.5.7-SNAPSHOT'

    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    compile group: 'commons-codec', name: 'commons-codec', version: '1.12'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

uploadArchives {
    repositories {
        mavenDeployer {
//            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "${nexusUrl}/repository/maven-releases/") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }

            snapshotRepository(url: "${nexusUrl}/repository/maven-snapshots/") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }

            pom.project {
                name 'MethodResourcePrediction - Utils'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Utils to provide utilities to improve forecasting'
                url 'https://github.com/RalfHerzog'

                scm {
                    connection 'git@github.com:MethodResourcePrediction/Utils.git'
                    developerConnection 'git@github.com:MethodResourcePrediction/Utils.git'
                    url 'https://github.com/MethodResourcePrediction/Utils'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id 'ralfherzog'
                        name 'Ralf Herzog'
                        email 'ralf@rherzog.de'
                    }
                }
            }
        }
    }
}

extraArchive {
    sources = false
    tests = true
    javadoc = false
}

nexus {
    sign = false
    repositoryUrl = "${nexusUrl}/repository/maven-releases/"
    snapshotRepositoryUrl = "${nexusUrl}/repository/maven-snapshots/"
}

jar {
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
        }
    }
}
